Request and Response Spec Builders :

ADD PLACE :

RestAssured.baseURI="XXXX";

Response res=given().queryParam("key", "qaclick123").header("Content-Type","application/json")

.body(add_place_json)
.when().post("/maps/api/place/add/json").
then().assertThat().statusCode(200). contentType("application/json")
extract().response();


GET_PLACE
RestAssured.baseURI="XXXX";

Response res=given().queryParam("key", "qaclick123").header("Content-Type","application/json")
when (). get("/maps/api/place/get/json").
then().assertThat().statusCode(200).contentType("application/json").extract().response();

DELETE_PLACE 
RestAssured.baseURI="XXXX";

Response res=given().queryParam("key", "qaclick123").header("Content-Type","application/json")
.body(“delete_Place_json”)
.when().post("/maps/api/place/delete/json").
then().assertThat().statusCode(200). contentType("application/json").extract().response();
**********************************************************************************************************************
Build   -Request Spec Builder-
req=	new RequestSpecBuilder().setContentType(ContentType.JSON)
			
		.setBaseUri("XXXX")
		.addQueryParam("key","qaclick123")
		.build();
given().spec (req ).body(add_place_json) .post(“/maps/api/place/add/json).



Build Response Spec Builder:
res = new ResponseSpecBuilder().expectStatusCode(200).expectContentType(ContentType.JSON). build();

then().spec(re).extract().response();

Rewriting Test with Request and Response Spec Builder :
given().spec(req).body(add_place_json).post(“/maps/api/place/add/json).
then().spec(res).extract().response();
**********************************************************************************************************************
using specbuilder we create some request and use it over and over in all testcases
thinngs which are common we can create a specbuilder and use it all places
if something changes we can simply change ar one place , it will reflect in all testcases

in req and res we have some common methods in them they can be created as req spec and resp spec builder and use them


package day3;

import static io.restassured.RestAssured.given;

import java.util.ArrayList;
import java.util.List;

import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.specification.ResponseSpecification;

public class SpecBuilderTest {
	public static void main(String[] args) {
		RestAssured.baseURI = "https://rahulshettyacademy.com";
		
		
		AddPlacePojo p = new AddPlacePojo();
		p.setAccuracy(50);
		p.setAddress("29,side layout , cohen 09");
		p.setLanguage("Frnch-IN");
		p.setPhoneNumber("(+91) 1234578921");
		p.setWebsite("https://rahulshettyacademy.com");
		p.setName("Frontline house");
		List<String> myList = new ArrayList<String>();
		myList.add("shoe park");
		myList.add("shop");
		p.setTypes(myList);
		
		LocationPojo l = new LocationPojo();
		l.setLat(-38.38);
		l.setLng(33.427);
		p.setLocation(l);
		
		
		//create request SpecBuilder
		RequestSpecification req = new RequestSpecBuilder().setBaseUri("https://rahulshettyacademy.com").addQueryParam("key", "qaclick123")
		.setContentType(ContentType.JSON).build();
		
		ResponseSpecification resspec = new ResponseSpecBuilder().expectStatusCode(200).expectContentType(ContentType.JSON).build();
		
		Response res = given().spec(req).body(p)
		.when().post("/maps/api/place/add/json")
		.then().spec(resspec).extract().response();
		
		String responseString = res.asString();
		System.out.println(responseString);
	}
}





